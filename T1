#include <bits/stdc++.h>
using namespace std;
const int peng=88;
int n,m;
inline void inpp(__int128 &u){
	u=0;
	char c=' ';
	while(c<'0'||c>'9'){
		c=getchar();
	}
	while(c>='0'&&c<='9'){
		u=u*10+c-'0';
		c=getchar();
	}
}
inline void outpp(__int128 g){
	if(g>9){
		outpp(g/10);
	}
	putchar(g%10+'0');
}
__int128 wuwa[peng][peng];
__int128 dp[peng][peng];
__int128 problem(__int128 a[]){
	memset(dp,0,sizeof(dp));
	for(int len=0;len<m;len++){
		for(int i=1;i+len<=m;i++){
			dp[i][i+len]=max(dp[i+1][i+len]*2+a[i]*2,dp[i][i+len-1]*2+a[i+len]*2);
		}
	}
	return dp[1][m];
}
int main() {
	cin>>n>>m;
	int acm=0;
	for(int i=1;i<=n;i++){
		for(int j=1;j<=m;j++){
			inpp(wuwa[i][j]);
		}
	}
	for(int i=1;i<=n;i++){
		acm+=problem(wuwa[i]);
	}
	outpp(acm);
	return 0;
}
